"""вторая ревизия

Revision ID: 9915e9787cdc
Revises: 52341384bbc5
Create Date: 2025-07-12 14:00:37.224461

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9915e9787cdc'
down_revision: Union[str, Sequence[str], None] = '52341384bbc5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('questions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('prompt', sa.Text(), nullable=False),
    sa.Column('level', sa.Enum('A1', 'A2', 'B1', 'B2', 'C1', 'C2', 'unknown', name='englishlevel'), nullable=False),
    sa.Column('category', sa.Enum('grammar', 'vocabulary', name='questioncategory'), nullable=False),
    sa.Column('type', sa.Enum('multiple_choice', 'open_text', 'drag_and_drop', name='questiontype'), nullable=False),
    sa.Column('correct_answer', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drag_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('target_key', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('drop_targets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('placeholder', sa.String(), nullable=False),
    sa.Column('target_key', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('level_upgrade_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('target_level', sa.Enum('A1', 'A2', 'B1', 'B2', 'C1', 'C2', 'unknown', name='englishlevel'), nullable=False),
    sa.Column('passed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('options',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('test_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('level', sa.Enum('A1', 'A2', 'B1', 'B2', 'C1', 'C2', 'unknown', name='englishlevel'), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('word_tiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('correct_position', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_answers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('selected_option_id', sa.UUID(), nullable=True),
    sa.Column('answer_text', sa.Text(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=False),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('match_pairs', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.ForeignKeyConstraint(['selected_option_id'], ['options.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['test_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('users', sa.Column('english_level', sa.Enum('A1', 'A2', 'B1', 'B2', 'C1', 'C2', 'unknown', name='englishlevel'), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('users', 'english_level')
    op.drop_table('user_answers')
    op.drop_table('word_tiles')
    op.drop_table('test_sessions')
    op.drop_table('options')
    op.drop_table('level_upgrade_requests')
    op.drop_table('drop_targets')
    op.drop_table('drag_items')
    op.drop_table('questions')
    # ### end Alembic commands ###
